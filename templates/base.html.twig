<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}MatchRoom{% endblock %}</title>
    <meta name="description" content="{% block description %}Bienvenue sur MatchRoom, votre plateforme de r√©servation d'h√¥tels en ligne. Trouvez l'h√¥tel id√©al pour votre s√©jour, comparez les prix et r√©servez en toute simplicit√©. Profitez de nos offres exclusives et d'un service client d√©di√© pour une exp√©rience inoubliable. Rejoignez-nous d√®s maintenant !{% endblock %}">
    <link rel="icon" href="{{ asset('icons/logo-simple.svg') }}" type="image/svg+xml">
    {% block stylesheets %}
    {% endblock %}

    {% block javascripts %}
        {% block importmap %}{{ importmap('app') }}{% endblock %}

            <script>
                const voiceBtn = document.getElementById('{{ voice_btn_id|default("voice-search-btn") }}');
                const input = document.getElementById('{{ input_id|default("smart-search-input") }}');
                const form = document.getElementById('{{ form_id|default("smart-search-form") }}');

                if (voiceBtn && 'webkitSpeechRecognition' in window) {
                    voiceBtn.addEventListener('click', () => {
                        const recognition = new webkitSpeechRecognition();
                        recognition.lang = 'fr-FR';
                        recognition.interimResults = false;
                        recognition.maxAlternatives = 1;

                        recognition.onstart = () => {
                            voiceBtn.innerText = 'üéôÔ∏è √âcoute...';
                        };

                        recognition.onerror = (event) => {
                            console.error("Erreur reconnaissance vocale :", event.error);
                            alert("Erreur reconnaissance vocale : " + event.error);
                            voiceBtn.innerText = 'üéôÔ∏è';
                        };

                        recognition.onend = () => {
                            voiceBtn.innerText = 'üéôÔ∏è';
                        };

                        recognition.onresult = (event) => {
                            const transcript = event.results[0][0].transcript;
                            input.value = transcript;
                            form.submit();
                        };

                        navigator.mediaDevices.getUserMedia({ audio: true })
                            .then(() => recognition.start())
                            .catch(err => alert("Permission micro refus√©e : " + err.message));
                    });
                } else {
                    console.warn('Reconnaissance vocale non support√©e.');
                    if (voiceBtn) voiceBtn.disabled = true;
                }
            </script>
    {% endblock %}
</head>
<body>
{% block header %}
    {% include 'includes/header.html.twig' %}
{% endblock %}

<div class=" w-full mx-auto">
    {% block body %}{% endblock %}
</div>
{% block footer %}
    {% include 'includes/footer.html.twig' %}
{% endblock %}

<script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
</body>
</html>
